var a = "";
var b = "";
var c = "";
var idcaptcha = "";
var captchakey = "";
var key = "bc382dda3db928e28b90e736a3731201";
var step = -1;
var ckey = "";

function toDataURL(url, callback) {
  var xhr = new XMLHttpRequest();
  xhr.onload = function() {
    var reader = new FileReader();
    reader.onloadend = function() {
      callback(reader.result);
    }
    reader.readAsDataURL(xhr.response);
  };
  xhr.open('GET', url);
  xhr.responseType = 'blob';
  xhr.send();
}




function convertImgToBase64(url)
{
    var canvas = document.createElement('CANVAS');
    img = document.createElement('img'),
    img.src = url;
    console.log(url);
    img.onload = function()
    {
        canvas.height = img.height;
        canvas.width = img.width;
        var dataURL = canvas.toDataURL('image/png');
        c = dataURL;
        canvas = null; 
    };
}
function dataURItoBlob(dataURI) {
    // convert base64/URLEncoded data component to raw binary data held in a string
    var byteString;
    if (dataURI.split(',')[0].indexOf('base64') >= 0)
        byteString = atob(dataURI.split(',')[1]);
    else
        byteString = unescape(dataURI.split(',')[1]);

    // separate out the mime component
    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

    // write the bytes of the string to a typed array
    var ia = new Uint8Array(byteString.length);
    for (var i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ia], {type: 'image/png'});
}
function getCap(id){
 

    var request = new XMLHttpRequest();
    

  request.onreadystatechange = function() {//Call a function when the state changes.
      if(request.readyState == XMLHttpRequest.DONE && request.status == 200) {
          captchakey = request.responseText;
      }
  }
    request.open("GET", "http://2captcha.com/res.php?key="+key+"&action=get&id="+id);
    request.send();
}
function sendCap(url){
 
var blob = dataURItoBlob(url);
var fd = new FormData();
fd.append("file", blob);
  
 
    var request = new XMLHttpRequest();
    

  request.onreadystatechange = function() {//Call a function when the state changes.
      if(request.readyState == XMLHttpRequest.DONE && request.status == 200) {
          b = request.responseText;
      }
  }
    request.open("POST", "https://2captcha.com/in.php?key="+key+"&header_acao=1");
    request.send(fd);
}
function getId(id){
  return id.substr(3,100);
}
setInterval(function(){
  if(step==-1){
    if(document.getElementById("free_play_form_button").style.display == "block"){
      step = 0;
    }else{
      console.log(step);
    }
  }
  	if(a==""){
    	if(step==0){
    	
			a = document.getElementById("captchasnet_free_play_captcha").getElementsByTagName("img")[0].src;
			console.log(a);
			toDataURL(a, function(dataUrl) {
        c = dataUrl;
      })
			//convertImgToBase64(a);
    	}
	}else{
    	
    	if(step==0){
    	    if(c!=""){
    	      console.log(c);
    	      sendCap(c);
            step = 1;
    	    }
        	
        }
    	if(step == 1 ){
        	if(b!=""){
        	  if(b.indexOf("OK")!=-1){
        	    idcaptcha = getId(b);
        	    step =2;
        	  }
        	}
        }
      if(step == 2){
        if(captchakey.indexOf("OK") == -1){
          captchakey = getCap(idcaptcha);
        }else{
          ckey = getId(captchakey);
          step = 3;
        }
      }
    }
},1000);
